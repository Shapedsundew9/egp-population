{
    "uid": {
        "type": "integer",
        "min": 0,
        "max": 32767,
        "meta": {
            "description": "Population UID is assigned by the Gene Pool if it does not already exist."
        }
    },
    "population_hash": {
        "type": "binary",
        "maxlength": 32,
        "meta": {
            "description": "A SHA256 of the population config."
        },
        "minlength": 32, 
        "readonly": true,
        "default_setter": "set_population_hash"
    },
    "git_repo": {
        "type": "string",
        "regex": "[a-zA-Z0-9_-\\.]{1, 256}",
        "minlength": 1,
        "meta": {
            "description": "The Git base URL *NOT* including the repo name. URL/git_repo.git must be a valid git repo url."
        },
        "maxlength": 256,
        "nullable": true,
        "default": null,
        "check_with": "valid_git_repo_url"
    },
    "git_url": {
        "type": "string",
        "regex": "(?i)\b((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))",
        "minlength": 8,
        "meta": {
            "description": "The Git base URL *NOT* including the repo name. URL/git_repo.git must be a valid git repo url."
        },
        "maxlength": 2048,
        "nullable": true,
        "default": null,
        "check_with": "valid_git_repo_url"
    },
    "git_hash": {
        "type": "binary",
        "maxlength": 32,
        "meta": {
            "description": "SHA256 or SHA1 (in the LSB's) of the git commit to pull."
        },
        "minlength": 20, 
        "nullable": true,
        "default": null,
        "check_with": "valid_git_hash"
    },
    "verified": {
        "type": "boolean",
        "meta": {
            "description": "True if git_hash is an SHA256. False if git_hash is SHA1."
        },
        "nullable": true,
        "default_setter": "set_verified",
        "check_with": "valid_verified"
    },
    "worker_id": {
        "type": "uuid",
        "required": true,
        "meta": {
            "description": "The worker that created this population."
        }
    },
    "size": {
        "type": "integer",
        "min": 1,
        "max": 2147483647,
        "default": 100,
        "meta": {
            "description": "The size of the population to be created / evolved in an epoch. Usually this would be 100's may be 10's, maybe 1000's."
        }
    },
    "inputs": {
        "type": "list",
        "required": true,
        "minlength": 0,
        "maxlength": 256,
        "schema": {
            "type": "string",
            "min": 1,
            "max": 256,
            "check_with": "valid_ep_type"
        },
        "meta": {
            "description": "Input interface of every individual in the population."
        }
    },
    "outputs": {
        "type": "list",
        "required": true,
        "minlength": 0,
        "maxlength": 256,
        "schema": {
            "type": "string",
            "min": 1,
            "max": 256,
            "check_with": "valid_ep_type"
        },
        "meta": {
            "description": "Output interface of every individual in the population."
        }
    },
    "ordered_interface_hash": {
        "type": "integer",
        "min": -9223372036854775808,
        "max": 9223372036854775807,
        "readonly": true,
        "default_setter": "set_oih"
    },
    "name": {
        "type": "string",
        "regex": "[A-Za-z_][\\w]{0, 63}",
        "minlength": 0,
        "maxlength": 64,
        "nullable": true,
        "meta": {
            "description": "User defined name for the population. Not used by Erasmus."
        }
    },
    "description":{
        "type": "string",
        "regex": "[ -~]{0, 16384}",
        "minlength": 0,
        "maxlength": 16384,
        "nullable": true,
        "default": null,
        "meta": {
            "description": "User defined arbitary string. Not used by Erasmus."
        }
    },
    "meta_data":{
        "type": "string",
        "regex": "[ -~]{0, 16384}",
        "minlength": 0,
        "maxlength": 16384,
        "nullable": true,
        "default": null,
        "meta": {
            "description": "User defined arbitary string. Not used by Erasmus."
        }
    },
    "created": {
        "meta": {
            "description": "The UTC date and time of the populations definition creation."
        },
        "type": "datetime",
        "readonly": true
    },
    "updated": {
        "meta": {
            "description": "The UTC date and time user defined fields not used by Erasmus were updated."
        },
        "type": "datetime"
    },
    "fitness_import": {
        "type": "string",
        "required": true,
        "minlength": 1,
        "maxlength": 256,
        "regex": "[a-zA-Z_][a-zA-Z0-9_\\.]{0, 255}",
        "meta": {
            "description": "'import <fitness_import> as fitness_function' must be valid python."
        }
    },
    "survivability_import": {
        "type": "string",
        "required": true,
        "minlength": 1,
        "maxlength": 256,
        "regex": "[a-zA-Z_][a-zA-Z0-9_\\.]{0, 255}",
        "meta": {
            "description": "'import <survivability_import> as survivability_function' must be valid python."
        }
    }
}